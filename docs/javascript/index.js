!function(){"use strict";function e(e){return 0==(128&e)}function t(t,r){return!e(t)||0==(t&1<<r)}function r(t,r,n,i,l,o){let s=n.cells.slice(0);const u=l(t,r,n),c=i(u);return e(s[t])&&(s[t]=o(s[t],u)),e(s[r])&&(s[r]=o(s[r],c)),{...n,cells:s}}var n;!function(e){e[e.TOP=1]="TOP",e[e.RIGHT=2]="RIGHT",e[e.BOTTOM=4]="BOTTOM",e[e.LEFT=8]="LEFT"}(n||(n={}));function i(e){return{cells:new Uint8Array(e.width*e.height),size:e}}function l(e,{size:t}){return e.y*t.width+e.x}function o(e,{size:t}){return{x:e%t.width,y:Math.floor(e/t.width)}}function s(e){return 15&(e<<2|e>>2)}function u(e,t,{size:r}){const i=o(e,{size:r}),l=o(t,{size:r});if(i.y>l.y)return n.TOP;if(i.x<l.x)return n.RIGHT;if(i.y<l.y)return n.BOTTOM;if(i.x>l.x)return n.LEFT;throw`'${i}' and '${l}' are not neighbours`}function c({x:e,y:t},r){let i={x:e,y:t};return r===n.TOP&&i.y--,r===n.RIGHT&&i.x++,r===n.BOTTOM&&i.y++,r===n.LEFT&&i.x--,i}var a,f=Object.freeze({__proto__:null,get Direction(){return n},_size_params:["height","width"],newBoard:i,newFromBaseBoard:function({cells:e},t){return{cells:e,size:t}},toIndex:l,toPosition:o,getCellByPosition:function(e,{cells:t,size:r}){return t[l(e,{size:r})]},setCellByPosition:function(e,t,{cells:r,size:n}){return r[l(e,{size:n})]=t},getOpposingDirection:s,getRelativeDirection:u,getRelativePosition:c,getNeighbours:function(t,{cells:r,size:n}){let i=[];return t>=n.width&&i.push(t-n.width),(t+1)%n.width!=0&&i.push(t+1),t<r.length-n.width&&i.push(t+n.width),t%n.width!=0&&i.push(t-1),i=i.filter((t=>e(r[t]))),i},getAllowedDirection:function({x:r,y:i},{cells:o,size:a},f=!0){let d=[];return i>0&&d.push(n.TOP),r<a.width-1&&d.push(n.RIGHT),i<a.height-1&&d.push(n.BOTTOM),r>0&&d.push(n.LEFT),d.filter((n=>{const d=l(c({x:r,y:i},n),{size:a}),h=l({x:r,y:i},{size:a}),g=o[d];return(!f||!function(e,r,n,i,l){const o=i(e,r,n),s=l(o);return t(n.cells[e],o)&&t(n.cells[r],s)}(d,h,{cells:o,size:a},u,s))&&e(g)})),d},getRows:function({cells:t,size:r}){return Array.from(t).map(((e,t)=>t)).reduce(((e,t,n)=>(n%r.width==0&&e.push([]),e[e.length-1].push(t),e)),[]).map((r=>r.filter((r=>e(t[r]))))).filter((e=>e.length))},removeInterWall:function(e,t,n){return r(e,t,n,s,u,((e,t)=>e|t))},setInterWall:function(e,t,n){return r(e,t,n,s,u,((e,t)=>e&~t))}});!function(e){e[e.TOP_CW=1]="TOP_CW",e[e.TOP_CCW=2]="TOP_CCW",e[e.RIGHT=4]="RIGHT",e[e.BOTTOM=8]="BOTTOM",e[e.LEFT=16]="LEFT"}(a||(a={}));function d(e){return Array.from(e).reduce(((e,t)=>e+t),0)}function h({radius:e,innerRadius:t}){t||(t=3);const r=d(z(e).slice(t));return{cells:new Uint8Array(r),size:{innerRadius:t,radius:e}}}function g(e){switch(e){case a.TOP_CCW:case a.TOP_CW:return a.BOTTOM;case a.RIGHT:return a.LEFT;case a.LEFT:return a.RIGHT}return a.TOP_CW&a.TOP_CCW}function p(e,t,{size:r}){const n=T(e,{size:r}),i=T(t,{size:r});if(n.r-1===i.r)return a.BOTTOM;if(n.r===i.r&&n.t+1===i.t)return a.RIGHT;if(n.r===i.r&&n.t-1===i.t)return a.LEFT;if(n.r+1===i.r&&e%2==0)return a.TOP_CW;if(n.r+1===i.r&&e%2==1)return a.TOP_CCW;throw`'${n}' and '${i}' are not neighbours`}function z(e){let t=[1],r=[0];for(let n=1;n<e;++n)t[n]=t[n-1],2*Math.PI*n/t[n-1]>2&&(t[n]*=2),r[n]=r[n-1]+t[n-1];return t}function _(e,{size:t}){return d(z(t.innerRadius+e.r).slice(t.innerRadius))+e.t}function T(e,{size:t}){const r=z(t.radius).slice(t.innerRadius).reduce(((e,t)=>(e.push(e[e.length-1]+t),e)),[0]),n=r.findIndex((t=>t>e));return{r:n-1,t:e-r[n-1]}}function $({size:e}){const t=z(e.radius).slice(e.innerRadius);let r=0,n=[];for(let e of t)n.push(Array.from(new Array(e),((e,t)=>r+t))),r+=e;return n}var m=Object.freeze({__proto__:null,get Direction(){return a},_size_params:["radius","innerRadius"],newBoard:h,newFromBaseBoard:function({cells:e},t){return{cells:e,size:t}},getCell:function(e,{cells:t,size:r}){return t[_(e,{size:r})]},setCell:function(e,t,{cells:r,size:n}){return r[_(e,{size:n})]=t},getOpposingDirection:g,getRelativeDirection:p,getRingNodeCount:z,toIndex:_,toPosition:T,getRows:$,getNeighbours:function(e,{size:t}){const r=z(t.radius).slice(t.innerRadius),n=r.reduce(((e,t)=>(e.push(e[e.length-1]+t),e)),[0]),i=n.findIndex((t=>t>e))-1,l=e-n[i];let o=[];if(i<t.radius-t.innerRadius-1)if(r[i]<r[i+1]){const e=_({r:i+1,t:2*l},{size:t});o.push(e),o.push(e+1)}else{const e=_({r:i+1,t:l},{size:t});o.push(e)}if(l>0&&o.push(e-1),i>0){let e;e=r[i]>r[i-1]?_({r:i-1,t:Math.floor(l/2)},{size:t}):_({r:i-1,t:l},{size:t}),o.push(e)}return l<r[i]-1&&o.push(e+1),o},removeInterWall:function(e,t,n){return r(e,t,n,g,p,((e,t)=>e|t))}});function O(e,t){return t.find((t=>t.has(e)))}function w(e,t,r){const n=r.map((e=>new Set(e))),i=O(e,n),l=O(t,n);if(i||l){if(null==i)l.add(e);else if(null==l)i.add(t);else if(i!=l){l.forEach((e=>i.add(e)));const e=n.indexOf(l);n.splice(e,1)}}else n.push(new Set([e,t]));return n}function S(e,t,r){const n=O(e,r),i=O(t,r);return!!n&&!!i&&n==i}var b=Object.freeze({__proto__:null,getItemSet:O,joinItemSets:w,isFromSameSet:S});function y(e){let t=e.slice(0);for(let e=t.length;e>0;e--){const r=Math.floor(Math.random()*e),n=t[e-1];t[e-1]=t[r],t[r]=n}return t}function R(e,t){let r=new Set(e);for(let e of t)r.delete(e);return r}function M(e){return e[I(e)]}function I(e){return Math.round(Math.random()*(e.length-1))}function v(e,t,r,n,i,l){for(let o=1;o<e.length;o++){null==O(e[o-1],i)&&i.push(new Set([e[o-1]])),null==O(e[o],i)&&i.push(new Set([e[o]])),l.getNeighbours(e[o-1],n).includes(e[o])&&(S(e[o-1],e[o],i)||(Math.random()>l.getFactor(t)||r)&&(n=l.removeInterWall(e[o-1],e[o],n),i=w(e[o-1],e[o],i)))}return[n,i]}function W(e,t,r,n,i){for(let l of n){let n=Array.from(l).filter((t=>e.includes(t)));n=y(n);let o=1+Math.round(Math.random()*(n.length-1));for(let e=0;e<o;e++){const o=n[e],s=M(i.getNeighbours(o,r).filter((e=>t.includes(e))));null!=s&&(r=i.removeInterWall(o,s,r),l.add(s))}}return[r,n]}function x(e,t,r,n,i){for(let l of n){let n=Array.from(l).filter((t=>e.includes(t)));n=y(n);let o=M(n);if(null==o)continue;const s=M(i.getNeighbours(o,r).filter((e=>t.includes(e))));null!=s&&(r=i.removeInterWall(o,s,r),l.add(s))}return[r,n]}var C={aldousBroder:Object.freeze({__proto__:null,_required_fns:["removeInterWall","getNeighbours"],generate:function(e,t){let r=new Set,n=I(e.cells);for(r.add(n);r.size<e.cells.length;){const i=t.getNeighbours(n,e);let l=i[Math.round((i.length-1)*Math.random())];r.has(l)||(e=t.removeInterWall(l,n,e),r.add(l)),n=l}return e}}),backtrack:Object.freeze({__proto__:null,_required_fns:["removeInterWall","getNeighbours"],generate:function(t,r,n){n||(n={Type:{},register:(...e)=>{}}),n.register(n.Type.RESET_MOVES);let i=Array.from(t.cells).map(((e,t)=>t)).filter((t=>e(t))),l=new Set,o=M(i);l.add(o);let s=[o];for(n.register(n.Type.CREATE_CELL_GROUP,{id:0,initialCellIdx:[o]});0!==s.length;){o=s[s.length-1];const e=r.getNeighbours(o,t).filter((e=>!l.has(e)));if(e.length>0){let i=M(e);l.add(i),t=r.removeInterWall(o,i,t),s.push(i),n.register(n.Type.APPEND_CELL_GROUP,{id:0,cellIdx:i})}else{let e=s.pop();n.register(n.Type.POP_CELL_GROUP,{id:0,cellIdx:e})}}return t}}),eller:Object.freeze({__proto__:null,_required_fns:["getRows","removeInterWall","getNeighbours"],generate:function(e,t){t.getFactor||((t={...t}).getFactor=()=>Math.random());let r=[];const n=t.getRows(e);for(let e of n[0])r.push(new Set([e]));for(let i=0;i<n.length-1;i++){let l=n[i];[e,r]=v(l,i,!1,e,r,t),[e,r]=W(l,n[i+1],e,r,t)}return[e,r]=v(n[n.length-1],n.length-1,!0,e,r,t),e},visitRow:v,connectToOtherRow:W}),kruskal:Object.freeze({__proto__:null,_required_fns:["removeInterWall","getNeighbours"],generate:function(t,r){let n=[],i=new Set,l=0;for(let r=0;r<t.cells.length;r++)e(t.cells[r])&&(n.push(new Set([r])),l++);for(;i.size<l;){const l=I(t.cells);if(!e(t.cells[l]))continue;const o=M(r.getNeighbours(l,t).filter((r=>e(t.cells[r]))));S(l,o,n)||(t=r.removeInterWall(l,o,t),n=w(l,o,n),i.add(l),i.add(o))}return t}}),prim:Object.freeze({__proto__:null,_required_fns:["removeInterWall","getNeighbours"],generate:function(t,r){let n=new Set,i=M(t.cells.map(((e,t)=>t)).filter((r=>e(t.cells[r])))),l=new Set(r.getNeighbours(i,t));for(n.add(i);l.size>0;){i=M(Array.from(l));let e=new Set(r.getNeighbours(i,t));for(let o of e)if(n.has(o)){t=r.removeInterWall(o,i,t),l.delete(i),n.add(i),l=new Set([...l,...e]),l=R(l,n);break}}return t}}),sidewinder:Object.freeze({__proto__:null,_required_fns:["removeInterWall","getRows","getNeighbours"],generate:function(e,t){let r=t.getRows(e),n=[];t.getFactor||((t={...t}).getFactor=()=>Math.random()),[e,n]=v(r[0],0,!0,e,n,t);for(let i=1;i<r.length;i++)[e,n]=v(r[i],i,!1,e,n,t),[e,n]=x(r[i],r[i-1],e,n,t);return e},connectToOtherRow:x}),_pathSet:b};const P=["svg","path","circle","line","rect"],L={className:"class",viewBox:"view=Box"};function B(e){return L[e]&&(e=L[e]),e.split("").map(((t,r)=>"="===t?"":t.toUpperCase()===t&&"="!==e[r-1]?`${0!==r?"-":""}${t.toLowerCase()}`:t)).join("")}function E(e,t){if("string"==typeof t||"number"==typeof t)e.innerHTML+=t.toString();else if(t instanceof Node)e.appendChild(t);else if(Array.isArray(t))for(const r of t)E(e,r)}function N(e,t,...r){let n;if(n=P.includes(e)?document.createElementNS("http://www.w3.org/2000/svg",e):document.createElement(e),t)for(const e of Object.keys(t))"boolean"!=typeof t[e]?n.setAttribute(B(e),t[e]):t[e]&&n.setAttribute(B(e),"");for(const e of r)E(n,e);return n}function A(e,t,...r){let n=Object.entries(t).map((([e,t])=>"boolean"==typeof t?B(e):`${B(e)}="${t}"`)).join(" "),i=r.map((e=>e.toString())).join("");return i?n?`<${e} ${n}>${i}</${e}>`:`<${e}>${i}</${e}>`:n?`<${e} ${n} />`:`<${e} />`}const F={cellSize:30,lineWidth:2,h:A};const j={cellSize:30,lineWidth:2,renderDisabled:!1,h:A};var H={circularSvg:Object.freeze({__proto__:null,render:function(e,t={}){t={...F,...t};const r=e.size.innerRadius,n=(1-r)*t.cellSize*.75,i=2*(t.cellSize*(e.size.radius-e.size.innerRadius)+n+r*t.cellSize)+t.lineWidth,l=i/2;let o=$(e),s="";for(let i=r;i<o.length+r;i++)for(let u=0;u<o[i-r].length;u++){const c=e.cells[o[i-r][u]],f=2*Math.PI/o[i-r].length,d=i*t.cellSize+n,h=d+t.cellSize,g=f*u,p=g+f,[[z,_],[T,$]]=[g,p].map((e=>[Math.cos(e),Math.sin(e)].map((e=>l+d*e)))),[[m,O],[w,S]]=[g,p].map((e=>[Math.cos(e),Math.sin(e)].map((e=>l+h*e))));0==(c&a.BOTTOM)&&(s+=`M${z},${_}A${d},${d},0,0,1,${T},${$}`),0==(c&a.LEFT)&&(s+=`M${z},${_}L${m},${O}`),0==(c&a.RIGHT)&&(s+=`M${T},${$}L${w},${S}`),i===o.length+r-1&&(s+=`M${m},${O}A${h},${h},0,0,1,${w},${S}`)}const u=t.h;return u("svg",{stroke:"currentColor",fill:"none",width:`${i}px`,height:`${i}px`,viewBox:`0 0 ${i} ${i}`},u("path",{d:s,strokeWidth:`${t.lineWidth}px`,strokeLinecap:"round"}))},_supported_boards:["circular"]}),rectangularSvg:Object.freeze({__proto__:null,render:function(t,r={}){const i=(r={...j,...r}).cellSize*(t.size.width+2)+r.lineWidth,l=r.cellSize*(t.size.height+2)+r.lineWidth;let s="";const u=t.cells.reduce(((i,l,u)=>{const{x:c,y:a}=o(u,{size:t.size}),f=c*r.cellSize+r.lineWidth/2+r.cellSize,d=a*r.cellSize+r.lineWidth/2+r.cellSize;return e(l)?(0==(l&n.TOP)&&(i+=`M${f},${d}H${f+r.cellSize}`),0==(l&n.RIGHT)&&(i+=`M${f+r.cellSize},${d}V${d+r.cellSize}`),0==(l&n.BOTTOM)&&(i+=`M${f},${d+r.cellSize}H${f+r.cellSize}`),0==(l&n.LEFT)&&(i+=`M${f},${d}V${d+r.cellSize}`),i):(s+=`M${f},${d}H${f+r.cellSize}V${d+r.cellSize}H${f}z`,i)}),""),c=r.h;return c("svg",{stroke:"currentColor",fill:"none",width:`${i}px`,height:`${l}px`,viewBox:`0 0 ${i} ${l}`},r.renderDisabled&&c("path",{d:s,className:"disabledPath"}),c("path",{d:u,strokeWidth:`${r.lineWidth}px`,strokeLinecap:"round"}))},_supported_boards:["rectangular"]})};let G=Array.from(document.querySelectorAll("[data-maze]"));for(let e of G){let t=JSON.parse(e.dataset.maze);if("rectangular"===t.board){let r=i({width:t.size[0],height:t.size[1]});t.generator&&C[t.generator]&&(r=C[t.generator].generate(r,f));let n=H.rectangularSvg.render(r,{...t,h:N});e.appendChild(n)}else if("circular"===t.board){let r=h({radius:t.size[0],innerRadius:t.size[1]});if(t.generator&&C[t.generator]){r=C[t.generator].generate(r,m);let n=H.circularSvg.render(r,{...t,h:N});e.appendChild(n)}}e.style.removeProperty("height"),e.style.marginLeft="auto",e.style.marginRight="auto"}}();
